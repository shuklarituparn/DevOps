spec
History
Add a spec section to the header of a YAML file to configure the behavior of a pipeline when a configuration is added to the pipeline with the include keyword.

spec:inputs
You can use spec:inputs to define input parameters for the CI/CD configuration you intend to add to a pipeline with include. Use include:inputs to define the values to use when the pipeline runs.

Use the inputs to customize the behavior of the configuration when included in CI/CD configuration.

Use the interpolation format $[[ input.input-id ]] to reference the values outside of the header section. Inputs are evaluated and interpolated when the configuration is fetched during pipeline creation, but before the configuration is merged with the contents of the .gitlab-ci.yml file.

Keyword type: Header keyword. specs must be declared at the top of the configuration file, in a header section.




spec:
  inputs:
    environment:
    job-stage:
---

scan-website:
  stage: $[[ inputs.job-stage ]]
  script: ./scan-website $[[ inputs.environment ]]




spec:
  inputs:
    website:
    user:
      default: 'test-user'
    flags:
      default: ''
---

# The pipeline configuration would follow...



spec:
  inputs:
    environment:
      options:
        - development
        - staging
        - production
---

# The pipeline configuration would follow...
In this example:
environment is mandatory and must be defined with one of the values in the list.



spec:
  inputs:
    version:
      regex: /^v\d\.\d+(\.\d+)$/
---

# The pipeline configuration would follow...
In this example, inputs of v1.0 or v1.2.3 match the regular expression and pass validation.
An input of v1.A.B does not match the regular expression and fails validation.

